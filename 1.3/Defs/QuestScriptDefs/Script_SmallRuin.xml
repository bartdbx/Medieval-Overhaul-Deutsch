<?xml version="1.0" encoding="utf-8"?>
<Defs>
<QuestScriptDef>
    <defName>DankPyon_OpportunitySite_SmallRuin</defName>
    <rootSelectionWeight>1.5</rootSelectionWeight>
    <rootMinPoints>350</rootMinPoints>
    <canGiveRoyalFavor>true</canGiveRoyalFavor>
    <expireDaysRange>4~8</expireDaysRange>
    <successHistoryEvent MayRequire="Ludeon.RimWorld.Ideology">Raided_BanditCamp</successHistoryEvent>
    <questNameRules>
        <rulesStrings>
            <li>questName->Das [bandit] [camp]</li>
            <li>questName->[bandit] [camp]</li>
            <li>questName->[asker_nameDef] und das [camp]</li>
            <li>camp->Camp</li>
            <li>camp->Ruin</li>
            <li>camp->Lair</li>
            <li>camp->Labryinth</li>
            <li>bandit->Bandit</li>
            <li>bandit->Raider</li>
            <li>bandit->Outlaw</li>
            <li>bandit->Desperado</li>
            <li>bandit->Fugitive</li>
            <li>bandit->Marauder</li>
            <li>bandit->Robber</li>
            <li>bandit->Brigand</li>
        </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->[asker_nameFull], [asker_faction_leaderTitle] der [asker_faction_name], hat uns eine Nachricht gesandt. Offenbar haben [siteFaction_pawnsPlural], die in einer nahe gelegenen Ruine leben, ihre Karawanen überfallen. Die Ruine wird von [siteFaction_name] kontrolliert.
\[asker_nameDef] bittet uns, die Ruinen zu säubern, was bedeutet, alle Feinde zu eliminieren. [asker_label] sagt, dass [sitePart0_description].</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
          <parms>
            <pointsFactorTwoStar>1.5</pointsFactorTwoStar>
            <pointsFactorThreeStar>2</pointsFactorThreeStar>
          </parms>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_AdjustPointsForDistantFight</def>
        </li>
        <li Class="QuestNode_GetMap" />

        <li Class="QuestNode_GetPawn">
          <storeAs>asker</storeAs>
          <mustBeFactionLeader>true</mustBeFactionLeader>
          <allowPermanentEnemyFaction>false</allowPermanentEnemyFaction>
          <hostileWeight>0.15</hostileWeight>
        </li>

        <li Class="QuestNode_GetSiteTile">
          <storeAs>siteTile</storeAs>
          <preferCloserTiles>true</preferCloserTiles>
        </li>

        <li Class="QuestNode_GetSitePartDefsByTagsAndFaction">
          <storeAs>sitePartDefs</storeAs>
          <storeFactionAs>siteFaction</storeFactionAs>
          <sitePartsTags>
            <li><tag>DankPyon_Small_Ruin</tag></li>
          </sitePartsTags>
          <mustBeHostileToFactionOf>$asker</mustBeHostileToFactionOf>
        </li>

        <li Class="VFECore.QuestNode_GetFaction">
					<allowEnemy>true</allowEnemy>
					<mustBePermanentEnemy>true</mustBePermanentEnemy>
					<storeAs>enemyFaction</storeAs>
					<factionDef>DankPyon_BrigandFaction</factionDef>
				</li>

        <li Class="QuestNode_GetDefaultSitePartsParams">
          <tile>$siteTile</tile>
          <faction>$enemyFaction</faction>
          <sitePartDefs>$sitePartDefs</sitePartDefs>
          <storeSitePartsParamsAs>sitePartsParams</storeSitePartsParamsAs>
        </li>
        
        <li Class="QuestNode_GetSiteThreatPoints">
          <storeAs>sitePoints</storeAs>
          <sitePartsParams>$sitePartsParams</sitePartsParams>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_GetDefaultRewardValueFromPoints</def>
          <parms>
            <!-- Use the actual threat points generated (some site parts define a minimum threshold) -->
            <points>$sitePoints</points>
          </parms>
        </li>

        <!-- Inflate reward value. Since we're basing the reward value on the threat points generated, we need to do this
             even though the threat points was deflated from the input points already. -->
        <li Class="QuestNode_Multiply">
            <value1>$rewardValue</value1>
            <value2>1.75</value2>
            <storeAs>rewardValue</storeAs>
        </li>

        <li Class="QuestNode_SubScript">
          <def>Util_GenerateSite</def>
        </li>
        
        <li Class="QuestNode_SpawnWorldObjects">
          <worldObjects>$site</worldObjects>
        </li>

        <li Class="QuestNode_WorldObjectTimeout">
          <worldObject>$site</worldObject>
          <isQuestTimeout>true</isQuestTimeout>
          <delayTicks>$(randInt(12,28)*60000)</delayTicks>
          <inSignalDisable>site.MapGenerated</inSignalDisable>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestExpired">Quest abgelaufen: [resolvedQuestName]</label>
                <text TKey="LetterTextQuestExpired">Die Banditen haben die Ruinen geplündert und sind weitergezogen. Die Quest [resolvedQuestName] ist abgelaufen.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <!-- If we enter and leave, the map is destroyed. Fail the quest. -->
        <li Class="QuestNode_Signal">
          <inSignal>site.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestFailed">Quest fehlgeschlagen: [resolvedQuestName]</label>
                <text TKey="LetterTextQuestFailed">Nachdem das Banditenlager entdeckt wurde, hat es sich aufgelöst. Die Quest [resolvedQuestName] ist beendet.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>site.AllEnemiesDefeated</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Notify_PlayerRaidedSomeone">
                <getRaidersFromMapParent>$site</getRaidersFromMapParent>
              </li>
              <li Class="QuestNode_GiveRewards">
                <parms>
                  <allowGoodwill>true</allowGoodwill>
                  <allowRoyalFavor>true</allowRoyalFavor>
                  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
                </parms>
                <addCampLootReward>true</addCampLootReward>
                <customLetterLabel TKey="LetterLabelPaymentArrived">Bezahlung erhalten</customLetterLabel>
                <customLetterText TKey="LetterTextPaymentArrived">Sie haben die Ruine bereinigt!\n\nDie Zahlung von [asker_faction_name] ist eingetroffen.</customLetterText>
                <nodeIfChosenPawnSignalUsed Class="QuestNode_Letter">
                  <letterDef>ChoosePawn</letterDef>
                  <label TKey="LetterLabelFavorReceiver">[asker_faction_royalFavorLabel]</label>
                  <text TKey="LetterTextFavorReceiver">Diese Kolonisten waren am Sieg für die Quest [resolvedQuestName] beteiligt. [asker_definite] möchte wissen, wer den [royalFavorReward_amount] [asker_faction_royalFavorLabel] für diese Leistung erhalten soll.</text>
                  <useColonistsOnMap>$site</useColonistsOnMap>
                  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
                </nodeIfChosenPawnSignalUsed>
              </li>
            </nodes>
          </node>
        </li>
        <li Class="QuestNode_End">
          <inSignal>site.AllEnemiesDefeated</inSignal>
          <outcome>Success</outcome>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
</Defs>